{"version":3,"sources":["_common.sass","lib/_reset.sass","screen.css","lib/_slick.sass","lib/_mixins.sass","../../node_modules/susy/sass/susy/output/shared/_inspect.scss","../../node_modules/susy/sass/susy/output/support/_rem.scss","../../node_modules/susy/sass/susy/language/susy/_container.scss","../../node_modules/susy/sass/susy/output/support/_background.scss","../../node_modules/susy/sass/susy/language/susy/_background.scss","../../node_modules/susy/sass/susy/output/shared/_background.scss","../../node_modules/susy/sass/susy/output/support/_clearfix.scss","../../node_modules/susy/sass/susy/language/susy/_margins.scss","../../node_modules/susy/sass/susy/language/susy/_gutters.scss","../../node_modules/susy/sass/susy/language/susy/_span.scss","../../node_modules/susy/sass/susy/output/float/_span.scss","../../node_modules/susy/sass/susy/language/susy/_gallery.scss","../../node_modules/susy/sass/susy/language/susy/_isolate.scss","../../node_modules/susy/sass/susy/language/susy/_rows.scss"],"names":[],"mappings":"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BA;EJgRC;IKpRE,iBAAkC;ICHlC,4BUoCuC;IVpCvC,+BUoCuC;IVpCvC,uBUoCuC;IVpCvC,WQwI0C;IRxI1C,YSGmB;ITHnB,mBOqFsB;IPrFtB,oBOqFsB;GXgnBvB;EcvpBC;IV9CA,eWwDiB;IXxDjB,oBUoD6B;IVpD7B,YYZ0B;Ibe1B,oCAAkC;GHwsBnC;Ec7pBC;IV9CA,iBW+C+B;IX/C/B,oBUoD6B;IVpD7B,YYJ0B;GhBotB3B;CACF;AE1sBA;EJgRC;IKpRE,kBAAkC;ICHlC,4BUoCuC;IVpCvC,+BUoCuC;IVpCvC,uBUoCuC;IVpCvC,YQwI0C;IRxI1C,YSGmB;ITHnB,mBOqFsB;IPrFtB,oBOqFsB;GXuoBvB;Ec9qBC;IV9CA,eWwDiB;IXxDjB,oBUoD6B;IVpD7B,YYJ0B;GhBquB3B;CACF;AFpcC;EACC,YanQiE;CXysBnE;;AAED,eAAe;AFtcf;EACC,oBAAmB;EACnB,mBAAkB;CEwclB;AFvcA;EACC,sBAAqB;CEyctB;AFxcC;EACC,eAAc;EACd,kBAAiB;EACjB,mBAAkB;EAClB,YAAW;EACX,aAAY;EACZ,cA1SU;EA2SV,6BAAoB;EAApB,0BAAoB;EAApB,wBAAoB;EAApB,qBAAoB;CE0ctB;AFxcE;EACC,cAAqB;EACrB,6BAAoB;EAApB,0BAAoB;EAApB,wBAAoB;EAApB,qBAAoB;CE0cvB;AFzcC;EACC,eAAc;EACd,iBAAgB;EAtTlB,kDAA8C;EAC9C,iBAAgB;EAuTd,YAAW;EACX,kBAAiB;EACjB,0BAAyB;EACzB,uBAAsB;CE4cxB;;AAED;;gFAEgF;AF5chF;EACC,iBAAgB;EAChB,uBAAsB;EACtB,oBAAmB;EK7ThB,uLAAkC;ECHlC,mBOqFsB;EPrFtB,oBOqFsB;CX4rBzB;AF/cA;EACC,gBAAe;EACf,uBAAsB;CEidvB;AFhdA;EACC,oBAAmB;EKnUjB,iBAAkC;ECHlC,mBMHsD;EPMtD,kBAAkC;ECHlC,oBMc8D;CV8wBjE;AFndA;EACC,oBAAmB;EA/UpB,4CAAwC;EACxC,iBAAgB;EAgVf,kBAAiB;EACjB,qBAAmB;CEsdpB;AFrdA;EACC,oBAAmB;CEudpB;AFrdE;EACC,iBAAgB;CEudnB;AFtdA;EACC,iBAAgB;EAChB,oBAAmB;CEwdpB;AFvdC;EACC,aAAY;EACZ,wCAAoC;CEydtC;;AFxdD;EACC,aAAY;EACZ,aAAY;CE2dZ;AFxdE;EACC,iBanUgE;CX6xBnE;;AFzdD;EK7VI,iBAAkC;ECHlC,mBMHsD;CVi0BzD;AF5dA;EK/VG,0CAAkC;ECHlC,4BQDmE;ERCnE,+BQDmE;ERCnE,uBQDmE;ERCnE,aQiD2B;ERjD3B,YSGmB;ETHnB,mBQuD4C;ERvD5C,oBQwD0C;CZgxB7C;AFpeA;EIjPA,mBAAkB;CFwtBlB;AEvtBA;EACC,eAAc;EACd,YAAW;EACX,YAAW;EACX,kBAAsC;CFytBvC;;AAED;;gFAEgF;AF5ehF;EACC,iBAAgB;EAChB,8BAA6B;EAC7B,iBAAmB;EACnB,mEAAkE;EAClE,kCAA4B;EAA5B,gCAA4B;EAA5B,6BAA4B;CE8e5B;AF5eC;EACC,iBAAgB;CE8elB;;AAED;;gFAEgF;AF9ehF;EACC,iBAAgB;EAChB,8BAA6B;EAC7B,iBAAmB;EACnB,0EAAyE;EACzE,kCAA4B;EAA5B,gCAA4B;EAA5B,6BAA4B;CEgf5B;AF9eC;EACC,iBAAgB;CEgflB;;AAED;;gFAEgF;AFhfhF;EACC,iBAAgB;EAChB,oBAAmB;EACnB,mBAAkB;EAClB,oBAAmB;EAnZnB,4CAAwC;EACxC,iBAAgB;EAoZhB,mBAAiB;EACjB,qBAAmB;EACnB,YAAW;EACX,mBAAkB;EAClB,0BAAyB;EACzB,uBAAsB;CEmftB;AEx3BA;EJ0XD;IAaE,iBAAgB;IAChB,oBAAmB;GEqflB;CACF;AFrfA;EACC,iBAAgB;EAChB,mBAAyB;EACzB,iBAAgB;EAxZjB,4CAAwC;EACxC,iBAAgB;CEg5BhB","file":"screen.css","sourcesContent":["// fonts\r\n@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,600,300,800)\r\n@import url(https://fonts.googleapis.com/css?family=Source+Sans+Pro:600)\r\n$default-fonts: Arial, sans-serif\r\n=sans-l\r\n\tfont-family: 'Open Sans', $default-fonts\r\n\tfont-weight: 300\r\n=sans\r\n\tfont-family: 'Open Sans', $default-fonts\r\n\tfont-weight: 400\r\n=sans-sb\r\n\tfont-family: 'Open Sans', $default-fonts\r\n\tfont-weight: 600\r\n=sans-xb\r\n\tfont-family: 'Open Sans', $default-fonts\r\n\tfont-weight: 800\r\n=ss-sb\r\n\tfont-family: 'Source Sans Pro', $default-fonts\r\n\tfont-weight: 600\r\n\r\n// colors\r\n$red: #D1221E\r\n\r\n/* ==========================================================================\r\n   Main Styles\r\n   ========================================================================== */\r\na:hover, a:focus\r\n\ttext-decoration: none\r\na\r\n\tcolor: inherit\r\n\ttext-decoration: none\r\nsvg\r\n\twidth: 100%\r\n\theight: 100%\r\n.is-hidden\r\n\tdisplay: none\r\n.row\r\n\t+pie-clearfix\r\n*\r\n\t+selection\r\n\t\tcolor: #fff\r\n\t\tbackground-color: $red\r\nbody\r\n\tmin-width: 320px\r\n\t+sans-sb\r\n\tfont-size: 16px\r\n\tcolor: #111\r\n\tline-height: 1.42857\r\n\tbackground-color: #111\r\n.wrapper\r\n\toverflow: hidden\r\n\tmargin: 0 auto\r\n\tmin-height: 100%\r\n\tpadding-bottom: 40px\r\n.wrap\r\n\t+container\r\n\ttransition: all 0.3s\r\n\t+pie-clearfix\r\n/* ==========================================================================\r\n   Header\r\n   ========================================================================== */\r\n.header\r\n\tposition: relative\r\n\tz-index: 1\r\n\theight: 50px\r\n\tline-height: 20px\r\n\tletter-spacing: 0.1em\r\n\t+pie-clearfix\r\n\t.main-nav\r\n\t\tfloat: left\r\n\t.logo\r\n\t\tposition: absolute\r\n\t\tleft: 0\r\n\t\ttop: 0\r\n\t.search\r\n\t\tfloat: right\r\n\t.icon\r\n\t\tfloat: left\r\n\t\tposition: relative\r\n\t\ttop: 2px\r\n\t\tmargin-right: 7px\r\n\t\twidth: 20px\r\n\t\theight: 15px\r\n\t\tfill: #fff\r\n\t\t&.icon-babes\r\n\t\t\tstroke-width: 12\r\n\t\t\tstroke: #fff\r\n\t\t&.icon-lifestyle\r\n\t\t\tstroke-width: 1\r\n\t\t\tstroke: #fff\r\n\t\t&.icon-entertainment\r\n\t\t\tstroke-width: 15\r\n\t\t\tstroke: #fff\r\n.main-nav\r\n\tmargin-left: 40px + 227px\r\n\tul\r\n\t\t+pie-clearfix\r\n\t\tfont-size: 15px\r\n\t\tcolor: #fff\r\n\t\ttext-transform: uppercase\r\n\t\tli\r\n\t\t\tfloat: left\r\n\t\t\ta\r\n\t\t\t\tdisplay: block\r\n\t\t\t\tpadding: 15px\r\n\t\t\t\ttransition: all 0.3s\r\n\t\t\t&:hover, &.is-active\r\n\t\t\t\ta\r\n\t\t\t\t\tbackground-color: $red\r\n\t\t\t\t\ttransition: all 0.3s\r\n.logo\r\n\ta\r\n\t\tdisplay: block\r\n\t\timg\r\n\t\t\twidth: 227px\r\n\t\t\theight: 123px\r\n\t\t\tvertical-align: middle\r\n/* search field */\r\n.search\r\n\t+ss-sb\r\n\t+pie-clearfix\r\n\t&-inp\r\n\t\tfloat: left\r\n\t\tmargin-top: 10px\r\n\t\tpadding: 0\r\n\t\twidth: 0\r\n\t\theight: 30px\r\n\t\t+sans-sb\r\n\t\tfont-size: 16px\r\n\t\tcolor: #bbb\r\n\t\tline-height: 30px\r\n\t\tbackground-color: rgba(255,255,255,.1)\r\n\t\ttransition: width 0.5s\r\n\t\t+placeholder-color(#bbb)\r\n\t\t&.is-active\r\n\t\t\tpadding: 0 5px\r\n\t\t\twidth: 140px\r\n\t\t\ttransition: width 0.5s\r\n\t&-btn\r\n\t\tfloat: right\r\n\t\tmargin-left: 15px\r\n\t\tpadding: 15px 5px\r\n\t\t+ss-sb\r\n\t\tfont-size: em(16)\r\n\t\tcolor: #fff\r\n\t\tline-height: 20px\r\n\t\ttext-transform: uppercase\r\n\t\tbackground-color: transparent\r\n\t\ttransition: all 0.3s\r\n\t\t&:hover\r\n\t\t\tbackground-color: $red\r\n\t\t\ttransition: all 0.3s\r\n\t\t+r(1279)\r\n\t\t\tpadding-left: 15px\r\n\t\t\tpadding-right: 15px\r\n\t.submit-btn\r\n\t\tdisplay: none\r\n/* ==========================================================================\r\n   Footer\r\n   ========================================================================== */\r\n.footer\r\n\tmargin-top: -40px\r\n\theight: 40px\r\n\t+ss-sb\r\n\tfont-size: 14px\r\n\tline-height: 20px\r\n\tbackground-color: #fff\r\n\t+pie-clearfix\r\n\t.copyright\r\n\t\tmargin-top: 10px\r\n\t\tfloat: left\r\n\t\ttransition: all 0.3s\r\n\t\t+r(1279)\r\n\t\t\tmargin-left: 20px\r\n\t\t\ttransition: all 0.3s\r\n\t.foot-nav\r\n\t\tfloat: right\r\n.foot-nav\r\n\tul\r\n\t\ttext-transform: uppercase\r\n\t\t+pie-clearfix\r\n\t\tli\r\n\t\t\tfloat: left\r\n\t\t\ta\r\n\t\t\t\tdisplay: block\r\n\t\t\t\tpadding: 10px 15px\r\n\t\t\t\ttransition: all 0.3s\r\n\t\t\t&:hover, &.is-active\r\n\t\t\t\ta\r\n\t\t\t\t\tcolor: #fff\r\n\t\t\t\t\tbackground-color: $red\r\n\t\t\t\t\ttransition: all 0.3s\r\n/* ==========================================================================\r\n   Main\r\n   ========================================================================== */\r\n/* main news */\r\n.main-news\r\n\t+sans-xb\r\n\tfont-size: em(36)\r\n\tline-height: (38/36)\r\n\t> a\r\n\t\tdisplay: block\r\n\t\t&:hover\r\n\t\t\t.icon\r\n\t\t\t\tfill: darken($red,20)\r\n\t\t\t\ttransition: all 0.3s\r\n\t&__img\r\n\t\toverflow: hidden\r\n\t\tmax-height: 380px\r\n\t\timg\r\n\t\t\twidth: 100%\r\n\t\t\tmin-height: 100%\r\n\t\t\tvertical-align: bottom\r\n\t&__desc\r\n\t\tpadding: 20px 60px 0\r\n\t\theight: 120px\r\n\t\tbackground-color: #fff\r\n\t\t.icon\r\n\t\t\tfloat: right\r\n\t\t\tmargin-left: 20px\r\n\t\t\twidth: 80px\r\n\t\t\theight: 80px\r\n\t\t\tfill: $red\r\n\t\t\ttransition: all 0.3s\r\n\t\tp\r\n\t\t\toverflow: hidden\r\n\t\t\theight: 2em * 40/36\r\n/* card */\r\n.card\r\n\tli\r\n\t\tposition: relative\r\n\t&__cat\r\n\t\tposition: absolute\r\n\t\ttop: 0\r\n\t\tright: 0\r\n\t\twidth: 30px\r\n\t\theight: 30px\r\n\t\ttext-align: center\r\n\t\tbackground-color: #111\r\n\t\t+vertical\r\n\t\tz-index: 1\r\n\t\ttransition: all 0.3s\r\n\t\t.icon\r\n\t\t\tdisplay: inline-block\r\n\t\t\tmargin-right: -4px\r\n\t\t\twidth: 20px\r\n\t\t\theight: 15px\r\n\t\t\tvertical-align: middle\r\n\t\t\tfill: #fff\r\n\t\t\t&.icon-babes\r\n\t\t\t\tstroke-width: 12\r\n\t\t\t\tstroke: #fff\r\n\t\t\t&.icon-lifestyle\r\n\t\t\t\tstroke-width: 1\r\n\t\t\t\tstroke: #fff\r\n\t\t\t&.icon-entertainment\r\n\t\t\t\tstroke-width: 15\r\n\t\t\t\tstroke: #fff\r\n\t\t&:hover\r\n\t\t\tbackground-color: $red\r\n\t\t\ttransition: all 0.3s\r\n\t&__in\r\n\t\tdisplay: block\r\n\t\ttransition: all 0.3s\r\n\t\t&:hover\r\n\t\t\tbox-shadow: 0 0 10px 4px $red\r\n\t\t\ttransition: all 0.3s\r\n\t\t&-img\r\n\t\t\t+ratio(37,21)\r\n\t\t\timg\r\n\t\t\t\twidth: 100%\r\n\t\t\t\tmin-height: 100%\r\n\t\t\t\t+ratio-in\r\n\t\t&-text\r\n\t\t\tpadding: 10px 30px 30px 20px\r\n\t\t\theight: 160px\r\n\t\t\tbackground-color: #fff\r\n\t\t\tp\r\n\t\t\t\toverflow: hidden\r\n\t\t\t\tmax-height: 3em * 25/20\r\n\t\t\t\t+sans-xb\r\n\t\t\t\tfont-size: 20px\r\n\t\t\t\tline-height: (25/20)\r\n\t\t\t\t+ p\r\n\t\t\t\t\tmargin-top: 10px\r\n\t\t\t\t\tmax-height: 2em * 18/13\r\n\t\t\t\t\t+sans\r\n\t\t\t\t\tfont-size: 13px\r\n\t\t\t\t\tline-height: (18/13)\r\n\t\t\t\t\tcolor: #111\r\n/* Tile Section */\r\n.tile\r\n\t&__list\r\n\t\t+pre(- gutter())\r\n\t\t+post(- gutter())\r\n\t\t+pie-clearfix\r\n\t\t+r(1279)\r\n\t\t\t+gutter(6 split)\r\n\t\tli\r\n\t\t\t+span(4)\r\n\t\t\tmargin-bottom: 2*gutter()\r\n\t\t\t+r(959)\r\n\t\t\t\t+gallery(6)\r\n\t\t\t+r(479)\r\n\t\t\t\t+gallery(12)\r\n\t\t.card__cat\r\n\t\t\tright: gutter()\r\n/* Load More */\r\n.load-more\r\n\tmargin-bottom: 60px\r\n\ttext-align: center\r\n\t&__btn\r\n\t\tdisplay: inline-block\r\n\t\t.icon\r\n\t\t\tdisplay: block\r\n\t\t\tmargin-left: auto\r\n\t\t\tmargin-right: auto\r\n\t\t\twidth: 80px\r\n\t\t\theight: 80px\r\n\t\t\tfill: $red\r\n\t\t\ttransition: all 0.3s\r\n\t\t&:hover\r\n\t\t\t.icon\r\n\t\t\t\tfill: darken($red,20)\r\n\t\t\t\ttransition: all 0.3s\r\n\t\tspan\r\n\t\t\tdisplay: block\r\n\t\t\tmargin-top: 10px\r\n\t\t\t+ss-sb\r\n\t\t\tcolor: #fff\r\n\t\t\tline-height: 20px\r\n\t\t\ttext-transform: uppercase\r\n\t\t\tletter-spacing: 0.05em\r\n/* ==========================================================================\r\n   Post page\r\n   ========================================================================== */\r\n.post\r\n\toverflow: hidden\r\n\tbackground-color: #fff\r\n\tmargin-right: 410px\r\n\t+gutter()\r\n\timg\r\n\t\tmax-width: 100%\r\n\t\tvertical-align: bottom\r\n\t&__img\r\n\t\tmargin-bottom: 10px\r\n\t\t+pre(- gutter())\r\n\t\t+post(- gutter())\r\n\t&__title\r\n\t\tmargin-bottom: 20px\r\n\t\t+sans-xb\r\n\t\tfont-size: em(36)\r\n\t\tline-height: (42/36)\r\n\tp\r\n\t\tmargin-bottom: 20px\r\n\t\timg\r\n\t\t\t+ img\r\n\t\t\t\tmargin-top: 10px\r\n\t.advert-wrap\r\n\t\tmargin-top: 30px\r\n\t\tmargin-bottom: 30px\r\n\t\t.advert-bg\r\n\t\t\theight: 90px\r\n\t\t\tbackground-color: rgba(#111111, 0.1)\r\n.aside\r\n\tfloat: right\r\n\twidth: 370px\r\n\t&__list\r\n\t\tli\r\n\t\t\t+ li\r\n\t\t\t\tmargin-top: gutter()\r\n.trend__list\r\n\t+pre(-10px)\r\n\tli\r\n\t\t+span(220px (gutter-override: 20px))\r\n\t.card__in-img\r\n\t\t+ratio(1,1)\r\n/* ==========================================================================\r\n   About Page\r\n   ========================================================================== */\r\n.about\r\n\tmargin-top: 40px\r\n\tpadding: 40px 510px 60px 60px\r\n\tline-height: (24/16)\r\n\tbackground: #fff url(\"../img/bg/img_boobs.png\") 92% -2px no-repeat\r\n\tbackground-size: 371px 186px\r\n\tp\r\n\t\t+ p\r\n\t\t\tmargin-top: 20px\r\n/* ==========================================================================\r\n   Privacy Page\r\n   ========================================================================== */\r\n.privacy\r\n\tmargin-top: 40px\r\n\tpadding: 40px 510px 60px 60px\r\n\tline-height: (24/16)\r\n\tbackground: #fff url(\"../img/bg/img_glasses_big.png\") 125% 55px no-repeat\r\n\tbackground-size: 608px 207px\r\n\tp\r\n\t\t+ p\r\n\t\t\tmargin-top: 20px\r\n/* ==========================================================================\r\n   Other Styles\r\n   ========================================================================== */\r\n.title\r\n\tmargin-top: 40px\r\n\tmargin-bottom: 40px\r\n\tpadding-left: 20px\r\n\tpadding-right: 20px\r\n\t+sans-l\r\n\tfont-size: em(42)\r\n\tline-height: (57/42)\r\n\tcolor: #fff\r\n\ttext-align: center\r\n\ttext-transform: uppercase\r\n\tletter-spacing: 0.25em\r\n\t+r(1023)\r\n\t\tmargin-top: 30px\r\n\t\tmargin-bottom: 30px\r\n\t&.title-cat\r\n\t\tmargin-top: 20px\r\n\t\tmargin-left: 227px + 25px\r\n\t\ttext-align: left\r\n\t\t+sans-xb\r\n","html, body, div, span, applet, object, iframe,h1, h2, h3, h4, h5,\r\nh6, p, blockquote, pre,a, abbr, acronym, address, big,\r\ncite, code,del, dfn, em, img, ins, kbd, q, s, samp,small,\r\nstrike, strong, sub, sup, tt, var,b, u, i, center,dl, dt,\r\ndd, ol, ul, li,fieldset, form, label, legend,table, caption,\r\ntbody, tfoot, thead, tr, th, td,article, aside, canvas, details,\r\nembed, figure, figcaption, footer, header, hgroup, menu, nav,\r\noutput, ruby, section, summary,time, mark, audio, video\r\n    margin: 0 \r\n    padding: 0\r\n    border: 0\r\n    vertical-align: baseline\r\nbody, html\r\n    height: 100%    \r\nimg,fieldset, a img\r\n    border: none\r\ninput[type=\"text\"],\r\ninput[type=\"email\"],\r\ninput[type=\"tel\"],\r\ntextarea\r\n    -webkit-appearance: none\r\ninput[type=\"submit\"],\r\nbutton\r\n    cursor: pointer\r\n    &::-moz-focus-inner\r\n        padding: 0\r\n        border: 0\r\ntextarea \r\n    overflow: auto\r\ninput, button \r\n    margin: 0\r\n    padding: 0\r\n    border: 0\r\ndiv, input, textarea, select,button,\r\nh1,h2,h3,h4,h5,h6,a,span,a:focus \r\n    outline: none\r\nul,ol    \r\n    list-style-type: none\r\ntable\r\n    border-spacing: 0\r\n    border-collapse: collapse\r\n    width: 100%\r\n.disable-hover\r\n    pointer-events: none !important\r\n*\r\n    box-sizing: border-box\r\na\r\n    color: inherit","@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,600,300,800);\r\n@import url(https://fonts.googleapis.com/css?family=Source+Sans+Pro:600);\r\nhtml, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5,\r\nh6, p, blockquote, pre, a, abbr, acronym, address, big,\r\ncite, code, del, dfn, em, img, ins, kbd, q, s, samp, small,\r\nstrike, strong, sub, sup, tt, var, b, u, i, center, dl, dt,\r\ndd, ol, ul, li, fieldset, form, label, legend, table, caption,\r\ntbody, tfoot, thead, tr, th, td, article, aside, canvas, details,\r\nembed, figure, figcaption, footer, header, hgroup, menu, nav,\r\noutput, ruby, section, summary, time, mark, audio, video {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  vertical-align: baseline;\r\n}\r\n\r\nbody, html {\r\n  height: 100%;\r\n}\r\n\r\nimg, fieldset, a img {\r\n  border: none;\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"email\"],\r\ninput[type=\"tel\"],\r\ntextarea {\r\n  -webkit-appearance: none;\r\n}\r\n\r\ninput[type=\"submit\"],\r\nbutton {\r\n  cursor: pointer;\r\n}\r\ninput[type=\"submit\"]::-moz-focus-inner,\r\nbutton::-moz-focus-inner {\r\n  padding: 0;\r\n  border: 0;\r\n}\r\n\r\ntextarea {\r\n  overflow: auto;\r\n}\r\n\r\ninput, button {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n}\r\n\r\ndiv, input, textarea, select, button,\r\nh1, h2, h3, h4, h5, h6, a, span, a:focus {\r\n  outline: none;\r\n}\r\n\r\nul, ol {\r\n  list-style-type: none;\r\n}\r\n\r\ntable {\r\n  border-spacing: 0;\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n}\r\n\r\n.disable-hover {\r\n  pointer-events: none !important;\r\n}\r\n\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\na {\r\n  color: inherit;\r\n}\r\n\r\n.slick-slider {\r\n  position: relative;\r\n  display: block;\r\n  box-sizing: border-box;\r\n  -moz-box-sizing: border-box;\r\n  -webkit-touch-callout: none;\r\n  -webkit-user-select: none;\r\n  -khtml-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  -ms-touch-action: pan-y;\r\n  touch-action: pan-y;\r\n  -webkit-tap-highlight-color: transparent;\r\n}\r\n\r\n.slick-list {\r\n  position: relative;\r\n  overflow: hidden;\r\n  display: block;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.slick-list:focus {\r\n  outline: none;\r\n}\r\n.slick-loading .slick-list {\r\n  background: white slick-image-url(\"ajax-loader.gif\") center center no-repeat;\r\n}\r\n.slick-list.dragging {\r\n  cursor: pointer;\r\n  cursor: hand;\r\n}\r\n\r\n.slick-slider .slick-list,\r\n.slick-track,\r\n.slick-slide,\r\n.slick-slide img {\r\n  -webkit-transform: translate3d(0, 0, 0);\r\n  -moz-transform: translate3d(0, 0, 0);\r\n  -ms-transform: translate3d(0, 0, 0);\r\n  -o-transform: translate3d(0, 0, 0);\r\n  transform: translate3d(0, 0, 0);\r\n}\r\n\r\n.slick-track {\r\n  position: relative;\r\n  left: 0;\r\n  top: 0;\r\n  display: block;\r\n  zoom: 1;\r\n}\r\n.slick-track:before, .slick-track:after {\r\n  content: \"\";\r\n  display: table;\r\n}\r\n.slick-track:after {\r\n  clear: both;\r\n}\r\n.slick-loading .slick-track {\r\n  visibility: hidden;\r\n}\r\n\r\n.slick-slide {\r\n  float: left;\r\n  height: 100%;\r\n  min-height: 1px;\r\n  display: none;\r\n}\r\n.slick-slide img {\r\n  display: block;\r\n  max-width: 100%;\r\n}\r\n.slick-slide.slick-loading img {\r\n  display: none;\r\n}\r\n.slick-slide.dragging img {\r\n  pointer-events: none;\r\n}\r\n.slick-initialized .slick-slide {\r\n  display: block;\r\n}\r\n.slick-loading .slick-slide {\r\n  visibility: hidden;\r\n}\r\n.slick-vertical .slick-slide {\r\n  display: block;\r\n  height: auto;\r\n  border: 1px solid transparent;\r\n}\r\n\r\n.slick-prev,\r\n.slick-next {\r\n  position: absolute;\r\n  top: 50%;\r\n  margin-top: -14px;\r\n  font: 0/0 a;\r\n  text-shadow: none;\r\n  color: transparent;\r\n  height: 50px;\r\n  background: none;\r\n}\r\n.slick-prev:focus,\r\n.slick-next:focus {\r\n  outline: none;\r\n}\r\n.slick-prev.slick-disabled,\r\n.slick-next.slick-disabled {\r\n  opacity: 0.2;\r\n}\r\n.slick-prev:before,\r\n.slick-next:before {\r\n  height: 50px;\r\n  line-height: 50px;\r\n}\r\n\r\n.slick-prev {\r\n  left: 0;\r\n}\r\n.slick-prev:before {\r\n  content: \"prev\";\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  font-size: 61px;\r\n  color: #fff;\r\n}\r\n\r\n.slick-next {\r\n  right: 0;\r\n}\r\n.slick-next:before {\r\n  content: \"next\";\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  font-size: 61px;\r\n  color: #fff;\r\n}\r\n\r\n.slick-dots {\r\n  text-align: center;\r\n  position: absolute;\r\n  margin: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n}\r\n.slick-dots li {\r\n  position: relative;\r\n  display: inline-block;\r\n  padding: 0 3px;\r\n}\r\n.slick-dots li.slick-active button {\r\n  opacity: 0.3;\r\n  box-shadow: none;\r\n}\r\n.slick-dots li:before {\r\n  display: none;\r\n}\r\n.slick-dots button {\r\n  display: block;\r\n  width: 6px;\r\n  height: 6px;\r\n  background: #fff;\r\n  box-shadow: 0 1px 5px rgba(0, 0, 0, 0.25);\r\n  cursor: pointer;\r\n  font: 0/0 a;\r\n  text-shadow: none;\r\n  color: transparent;\r\n  border-radius: 50%;\r\n}\r\n.slick-dots button:hover {\r\n  box-shadow: none;\r\n}\r\n\r\n/* ==========================================================================\r\n * Main Styles\r\n * ========================================================================== */\r\na:hover, a:focus {\r\n  text-decoration: none;\r\n}\r\n\r\na {\r\n  color: inherit;\r\n  text-decoration: none;\r\n}\r\n\r\nsvg {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.is-hidden {\r\n  display: none;\r\n}\r\n\r\n.row:before, .row:after {\r\n  content: \"\";\r\n  display: table;\r\n}\r\n.row:after {\r\n  clear: both;\r\n}\r\n\r\n* ::selection {\r\n  color: #fff;\r\n  background-color: #D1221E;\r\n}\r\n* ::-moz-selection {\r\n  color: #fff;\r\n  background-color: #D1221E;\r\n}\r\n\r\nbody {\r\n  min-width: 320px;\r\n  font-family: \"Open Sans\", Arial, sans-serif;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  color: #111;\r\n  line-height: 1.42857;\r\n  background-color: #111;\r\n}\r\n\r\n.wrapper {\r\n  overflow: hidden;\r\n  margin: 0 auto;\r\n  min-height: 100%;\r\n  padding-bottom: 40px;\r\n}\r\n\r\n.wrap {\r\n  -susy-container: (container: 1190px, gutter-position: inside-static, column-width: 80px, columns: 12, gutters: 0.5, debug: (image: show, color: rgba(203, 48, 48, 0.25), inspect: true));\r\n  max-width: 1190px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  -susy-show-grid: (container: 1190px, gutter-position: inside-static, column-width: 80px, columns: 12, gutters: 0.5, debug: (image: show, color: rgba(203, 48, 48, 0.25), inspect: true));\r\n  background-image: linear-gradient(to right, rgba(203, 48, 48, 0.25), rgba(220, 107, 107, 0.25));\r\n  background-size: 8.33333%;\r\n  background-origin: content-box;\r\n  background-clip: content-box;\r\n  background-position: left top;\r\n  -susy-background-grid: (container: 1190px, gutter-position: inside-static, column-width: 80px, columns: 12, gutters: 0.5, debug: (image: show, color: rgba(203, 48, 48, 0.25), inspect: true));\r\n  transition: all 0.3s;\r\n}\r\n.wrap:after {\r\n  content: \" \";\r\n  display: block;\r\n  clear: both;\r\n}\r\n.wrap:before, .wrap:after {\r\n  content: \"\";\r\n  display: table;\r\n}\r\n.wrap:after {\r\n  clear: both;\r\n}\r\n\r\n/* ==========================================================================\r\n * Header\r\n * ========================================================================== */\r\n.header {\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 50px;\r\n  line-height: 20px;\r\n  letter-spacing: 0.1em;\r\n}\r\n.header:before, .header:after {\r\n  content: \"\";\r\n  display: table;\r\n}\r\n.header:after {\r\n  clear: both;\r\n}\r\n.header .main-nav {\r\n  float: left;\r\n}\r\n.header .logo {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n}\r\n.header .search {\r\n  float: right;\r\n}\r\n.header .icon {\r\n  float: left;\r\n  position: relative;\r\n  top: 2px;\r\n  margin-right: 7px;\r\n  width: 20px;\r\n  height: 15px;\r\n  fill: #fff;\r\n}\r\n.header .icon.icon-babes {\r\n  stroke-width: 12;\r\n  stroke: #fff;\r\n}\r\n.header .icon.icon-lifestyle {\r\n  stroke-width: 1;\r\n  stroke: #fff;\r\n}\r\n.header .icon.icon-entertainment {\r\n  stroke-width: 15;\r\n  stroke: #fff;\r\n}\r\n\r\n.main-nav {\r\n  margin-left: 267px;\r\n}\r\n.main-nav ul {\r\n  font-size: 15px;\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n}\r\n.main-nav ul:before, .main-nav ul:after {\r\n  content: \"\";\r\n  display: table;\r\n}\r\n.main-nav ul:after {\r\n  clear: both;\r\n}\r\n.main-nav ul li {\r\n  float: left;\r\n}\r\n.main-nav ul li a {\r\n  display: block;\r\n  padding: 15px;\r\n  transition: all 0.3s;\r\n}\r\n.main-nav ul li:hover a, .main-nav ul li.is-active a {\r\n  background-color: #D1221E;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.logo a {\r\n  display: block;\r\n}\r\n.logo a img {\r\n  width: 227px;\r\n  height: 123px;\r\n  vertical-align: middle;\r\n}\r\n\r\n/* search field */\r\n.search {\r\n  font-family: \"Source Sans Pro\", Arial, sans-serif;\r\n  font-weight: 600;\r\n}\r\n.search:before, .search:after {\r\n  content: \"\";\r\n  display: table;\r\n}\r\n.search:after {\r\n  clear: both;\r\n}\r\n.search-inp {\r\n  float: left;\r\n  margin-top: 10px;\r\n  padding: 0;\r\n  width: 0;\r\n  height: 30px;\r\n  font-family: \"Open Sans\", Arial, sans-serif;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  color: #bbb;\r\n  line-height: 30px;\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  transition: width 0.5s;\r\n}\r\n.search-inp:-moz-placeholder, .search-inp::-moz-placeholder {\r\n  color: #bbb;\r\n  opacity: 1;\r\n}\r\n.search-inp::-webkit-input-placeholder {\r\n  color: #bbb;\r\n}\r\n.search-inp.is-active {\r\n  padding: 0 5px;\r\n  width: 140px;\r\n  transition: width 0.5s;\r\n}\r\n.search-btn {\r\n  float: right;\r\n  margin-left: 15px;\r\n  padding: 15px 5px;\r\n  font-family: \"Source Sans Pro\", Arial, sans-serif;\r\n  font-weight: 600;\r\n  font-size: 1em;\r\n  color: #fff;\r\n  line-height: 20px;\r\n  text-transform: uppercase;\r\n  background-color: transparent;\r\n  transition: all 0.3s;\r\n}\r\n.search-btn:hover {\r\n  background-color: #D1221E;\r\n  transition: all 0.3s;\r\n}\r\n@media only screen and (max-width: 1279px) {\r\n  .search-btn {\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n  }\r\n}\r\n.search .submit-btn {\r\n  display: none;\r\n}\r\n\r\n/* ==========================================================================\r\n * Footer\r\n * ========================================================================== */\r\n.footer {\r\n  margin-top: -40px;\r\n  height: 40px;\r\n  font-family: \"Source Sans Pro\", Arial, sans-serif;\r\n  font-weight: 600;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  background-color: #fff;\r\n}\r\n.footer:before, .footer:after {\r\n  content: \"\";\r\n  display: table;\r\n}\r\n.footer:after {\r\n  clear: both;\r\n}\r\n.footer .copyright {\r\n  margin-top: 10px;\r\n  float: left;\r\n  transition: all 0.3s;\r\n}\r\n@media only screen and (max-width: 1279px) {\r\n  .footer .copyright {\r\n    margin-left: 20px;\r\n    transition: all 0.3s;\r\n  }\r\n}\r\n.footer .foot-nav {\r\n  float: right;\r\n}\r\n\r\n.foot-nav ul {\r\n  text-transform: uppercase;\r\n}\r\n.foot-nav ul:before, .foot-nav ul:after {\r\n  content: \"\";\r\n  display: table;\r\n}\r\n.foot-nav ul:after {\r\n  clear: both;\r\n}\r\n.foot-nav ul li {\r\n  float: left;\r\n}\r\n.foot-nav ul li a {\r\n  display: block;\r\n  padding: 10px 15px;\r\n  transition: all 0.3s;\r\n}\r\n.foot-nav ul li:hover a, .foot-nav ul li.is-active a {\r\n  color: #fff;\r\n  background-color: #D1221E;\r\n  transition: all 0.3s;\r\n}\r\n\r\n/* ==========================================================================\r\n * Main\r\n * ========================================================================== */\r\n/* main news */\r\n.main-news {\r\n  font-family: \"Open Sans\", Arial, sans-serif;\r\n  font-weight: 800;\r\n  font-size: 2.25em;\r\n  line-height: 1.05556;\r\n}\r\n.main-news > a {\r\n  display: block;\r\n}\r\n.main-news > a:hover .icon {\r\n  fill: #781311;\r\n  transition: all 0.3s;\r\n}\r\n.main-news__img {\r\n  overflow: hidden;\r\n  max-height: 380px;\r\n}\r\n.main-news__img img {\r\n  width: 100%;\r\n  min-height: 100%;\r\n  vertical-align: bottom;\r\n}\r\n.main-news__desc {\r\n  padding: 20px 60px 0;\r\n  height: 120px;\r\n  background-color: #fff;\r\n}\r\n.main-news__desc .icon {\r\n  float: right;\r\n  margin-left: 20px;\r\n  width: 80px;\r\n  height: 80px;\r\n  fill: #D1221E;\r\n  transition: all 0.3s;\r\n}\r\n.main-news__desc p {\r\n  overflow: hidden;\r\n  height: 2.22222em;\r\n}\r\n\r\n/* card */\r\n.card li {\r\n  position: relative;\r\n}\r\n.card__cat {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  width: 30px;\r\n  height: 30px;\r\n  text-align: center;\r\n  background-color: #111;\r\n  white-space: nowrap;\r\n  z-index: 1;\r\n  transition: all 0.3s;\r\n}\r\n.card__cat:before {\r\n  content: \"\";\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  width: 0;\r\n  height: 100%;\r\n  margin-right: -0.25em;\r\n}\r\n.card__cat .icon {\r\n  display: inline-block;\r\n  margin-right: -4px;\r\n  width: 20px;\r\n  height: 15px;\r\n  vertical-align: middle;\r\n  fill: #fff;\r\n}\r\n.card__cat .icon.icon-babes {\r\n  stroke-width: 12;\r\n  stroke: #fff;\r\n}\r\n.card__cat .icon.icon-lifestyle {\r\n  stroke-width: 1;\r\n  stroke: #fff;\r\n}\r\n.card__cat .icon.icon-entertainment {\r\n  stroke-width: 15;\r\n  stroke: #fff;\r\n}\r\n.card__cat:hover {\r\n  background-color: #D1221E;\r\n  transition: all 0.3s;\r\n}\r\n.card__in {\r\n  display: block;\r\n  transition: all 0.3s;\r\n}\r\n.card__in:hover {\r\n  box-shadow: 0 0 10px 4px #D1221E;\r\n  transition: all 0.3s;\r\n}\r\n.card__in-img {\r\n  position: relative;\r\n}\r\n.card__in-img:before {\r\n  display: block;\r\n  content: \"\";\r\n  width: 100%;\r\n  padding-top: 56.75676%;\r\n}\r\n.card__in-img img {\r\n  width: 100%;\r\n  min-height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n}\r\n.card__in-text {\r\n  padding: 10px 30px 30px 20px;\r\n  height: 160px;\r\n  background-color: #fff;\r\n}\r\n.card__in-text p {\r\n  overflow: hidden;\r\n  max-height: 3.75em;\r\n  font-family: \"Open Sans\", Arial, sans-serif;\r\n  font-weight: 800;\r\n  font-size: 20px;\r\n  line-height: 1.25;\r\n}\r\n.card__in-text p + p {\r\n  margin-top: 10px;\r\n  max-height: 2.76923em;\r\n  font-family: \"Open Sans\", Arial, sans-serif;\r\n  font-weight: 400;\r\n  font-size: 13px;\r\n  line-height: 1.38462;\r\n  color: #111;\r\n}\r\n\r\n/* Tile Section */\r\n.tile__list {\r\n  -susy-pre: -20px;\r\n  margin-left: -20px;\r\n  -susy-post: -20px;\r\n  margin-right: -20px;\r\n}\r\n.tile__list:before, .tile__list:after {\r\n  content: \"\";\r\n  display: table;\r\n}\r\n.tile__list:after {\r\n  clear: both;\r\n}\r\n@media only screen and (max-width: 1279px) {\r\n  .tile__list {\r\n    -susy-gutters: 6 split;\r\n    margin-left: 2.77778%;\r\n    margin-right: 2.77778%;\r\n  }\r\n}\r\n.tile__list li {\r\n  -susy-span: 4;\r\n  -moz-box-sizing: border-box;\r\n  -webkit-box-sizing: border-box;\r\n  box-sizing: border-box;\r\n  width: 33.33333%;\r\n  float: left;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  -susy-nested: (span: 4);\r\n  margin-bottom: 40px;\r\n}\r\n@media only screen and (max-width: 959px) {\r\n  .tile__list li {\r\n    -susy-gallery: 6;\r\n    -moz-box-sizing: border-box;\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n    width: 50%;\r\n    float: left;\r\n    padding-left: 20px;\r\n    padding-right: 20px;\r\n  }\r\n  .tile__list li:nth-child(2n + 1) {\r\n    margin-left: 0;\r\n    margin-right: -100%;\r\n    clear: both;\r\n    -susy-first: (span: 6, location: 1);\r\n  }\r\n  .tile__list li:nth-child(2n + 2) {\r\n    margin-left: 50%;\r\n    margin-right: -100%;\r\n    clear: none;\r\n  }\r\n}\r\n@media only screen and (max-width: 479px) {\r\n  .tile__list li {\r\n    -susy-gallery: 12;\r\n    -moz-box-sizing: border-box;\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    float: left;\r\n    padding-left: 20px;\r\n    padding-right: 20px;\r\n  }\r\n  .tile__list li:nth-child(1n + 1) {\r\n    margin-left: 0;\r\n    margin-right: -100%;\r\n    clear: none;\r\n  }\r\n}\r\n.tile__list .card__cat {\r\n  right: 20px;\r\n}\r\n\r\n/* Load More */\r\n.load-more {\r\n  margin-bottom: 60px;\r\n  text-align: center;\r\n}\r\n.load-more__btn {\r\n  display: inline-block;\r\n}\r\n.load-more__btn .icon {\r\n  display: block;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 80px;\r\n  height: 80px;\r\n  fill: #D1221E;\r\n  transition: all 0.3s;\r\n}\r\n.load-more__btn:hover .icon {\r\n  fill: #781311;\r\n  transition: all 0.3s;\r\n}\r\n.load-more__btn span {\r\n  display: block;\r\n  margin-top: 10px;\r\n  font-family: \"Source Sans Pro\", Arial, sans-serif;\r\n  font-weight: 600;\r\n  color: #fff;\r\n  line-height: 20px;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.05em;\r\n}\r\n\r\n/* ==========================================================================\r\n * Post page\r\n * ========================================================================== */\r\n.post {\r\n  overflow: hidden;\r\n  background-color: #fff;\r\n  margin-right: 410px;\r\n  -susy-gutters: (container: 1190px, gutter-position: inside-static, column-width: 80px, columns: 12, gutters: 0.5, debug: (image: show, color: rgba(203, 48, 48, 0.25), inspect: true));\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n}\r\n.post img {\r\n  max-width: 100%;\r\n  vertical-align: bottom;\r\n}\r\n.post__img {\r\n  margin-bottom: 10px;\r\n  -susy-pre: -20px;\r\n  margin-left: -20px;\r\n  -susy-post: -20px;\r\n  margin-right: -20px;\r\n}\r\n.post__title {\r\n  margin-bottom: 20px;\r\n  font-family: \"Open Sans\", Arial, sans-serif;\r\n  font-weight: 800;\r\n  font-size: 2.25em;\r\n  line-height: 1.16667;\r\n}\r\n.post p {\r\n  margin-bottom: 20px;\r\n}\r\n.post p img + img {\r\n  margin-top: 10px;\r\n}\r\n.post .advert-wrap {\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n}\r\n.post .advert-wrap .advert-bg {\r\n  height: 90px;\r\n  background-color: rgba(17, 17, 17, 0.1);\r\n}\r\n\r\n.aside {\r\n  float: right;\r\n  width: 370px;\r\n}\r\n.aside__list li + li {\r\n  margin-top: 20px;\r\n}\r\n\r\n.trend__list {\r\n  -susy-pre: -10px;\r\n  margin-left: -10px;\r\n}\r\n.trend__list li {\r\n  -susy-span: 220px (gutter-override: 20px);\r\n  -moz-box-sizing: border-box;\r\n  -webkit-box-sizing: border-box;\r\n  box-sizing: border-box;\r\n  width: 220px;\r\n  float: left;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n}\r\n.trend__list .card__in-img {\r\n  position: relative;\r\n}\r\n.trend__list .card__in-img:before {\r\n  display: block;\r\n  content: \"\";\r\n  width: 100%;\r\n  padding-top: 100%;\r\n}\r\n\r\n/* ==========================================================================\r\n * About Page\r\n * ========================================================================== */\r\n.about {\r\n  margin-top: 40px;\r\n  padding: 40px 510px 60px 60px;\r\n  line-height: 1.5;\r\n  background: #fff url(\"../img/bg/img_boobs.png\") 92% -2px no-repeat;\r\n  background-size: 371px 186px;\r\n}\r\n.about p + p {\r\n  margin-top: 20px;\r\n}\r\n\r\n/* ==========================================================================\r\n * Privacy Page\r\n * ========================================================================== */\r\n.privacy {\r\n  margin-top: 40px;\r\n  padding: 40px 510px 60px 60px;\r\n  line-height: 1.5;\r\n  background: #fff url(\"../img/bg/img_glasses_big.png\") 125% 55px no-repeat;\r\n  background-size: 608px 207px;\r\n}\r\n.privacy p + p {\r\n  margin-top: 20px;\r\n}\r\n\r\n/* ==========================================================================\r\n * Other Styles\r\n * ========================================================================== */\r\n.title {\r\n  margin-top: 40px;\r\n  margin-bottom: 40px;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  font-family: \"Open Sans\", Arial, sans-serif;\r\n  font-weight: 300;\r\n  font-size: 2.625em;\r\n  line-height: 1.35714;\r\n  color: #fff;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.25em;\r\n}\r\n@media only screen and (max-width: 1023px) {\r\n  .title {\r\n    margin-top: 30px;\r\n    margin-bottom: 30px;\r\n  }\r\n}\r\n.title.title-cat {\r\n  margin-top: 20px;\r\n  margin-left: 252px;\r\n  text-align: left;\r\n  font-family: \"Open Sans\", Arial, sans-serif;\r\n  font-weight: 800;\r\n}\r\n\r\n\r\n",".slick-slider\n\tposition: relative\n\tdisplay: block\n\tbox-sizing: border-box\n\t-moz-box-sizing: border-box\n\t-webkit-touch-callout: none\n\t-webkit-user-select: none\n\t-khtml-user-select: none\n\t-moz-user-select: none\n\t-ms-user-select: none\n\tuser-select: none\n\t-ms-touch-action: pan-y\n\ttouch-action: pan-y\n\t-webkit-tap-highlight-color: transparent\n.slick-list\n\tposition: relative\n\toverflow: hidden\n\tdisplay: block\n\tmargin: 0\n\tpadding: 0\n\t&:focus\n\t\toutline: none\n\t.slick-loading &\n\t\tbackground: white slick-image-url(\"ajax-loader.gif\") center center no-repeat\n\t&.dragging\n\t\tcursor: pointer\n\t\tcursor: hand\n\n.slick-slider .slick-list,\n.slick-track,\n.slick-slide,\n.slick-slide img\n\t-webkit-transform: translate3d(0, 0, 0)\n\t-moz-transform: translate3d(0, 0, 0)\n\t-ms-transform: translate3d(0, 0, 0)\n\t-o-transform: translate3d(0, 0, 0)\n\ttransform: translate3d(0, 0, 0)\n\n.slick-track\n\tposition: relative\n\tleft: 0\n\ttop: 0\n\tdisplay: block\n\tzoom: 1\n\t&:before,\n\t&:after\n\t\tcontent: \"\"\n\t\tdisplay: table\n\t&:after\n\t\tclear: both\n\t.slick-loading &\n\t\tvisibility: hidden\n\n.slick-slide\n\tfloat: left\n\theight: 100%\n\tmin-height: 1px\n\timg\n\t\tdisplay: block\n\t\tmax-width: 100%\n\t&.slick-loading img\n\t\tdisplay: none\n\tdisplay: none\n\t&.dragging img\n\t\tpointer-events: none\n\t.slick-initialized &\n\t\tdisplay: block\n\t.slick-loading &\n\t\tvisibility: hidden\n\t.slick-vertical &\n\t\tdisplay: block\n\t\theight: auto\n\t\tborder: 1px solid transparent\n\n.slick-prev,\n.slick-next\n\tposition: absolute\n\ttop: 50%\n\tmargin-top: -14px\n\t+hide-text\n\theight: 50px\n\tbackground: none\n\t&:focus\n\t\toutline: none\n\t&.slick-disabled\n\t\topacity: 0.2\n\t&:before\n\t\theight: 50px\n\t\tline-height: 50px\n.slick-prev\n\tleft: 0\n\t&:before\n\t\tcontent: \"prev\"\n\t\tdisplay: inline-block\n\t\tvertical-align: middle\n\t\tfont-size: 61px\n\t\tcolor: #fff\n.slick-next\n\tright: 0\n\t&:before\n\t\tcontent: \"next\"\n\t\tdisplay: inline-block\n\t\tvertical-align: middle\n\t\tfont-size: 61px\n\t\tcolor: #fff\n.slick-dots\n\ttext-align: center\n\tposition: absolute\n\tmargin: 0\n\tbottom: 0\n\tleft: 0\n\tright: 0\n\tli\n\t\tposition: relative\n\t\tdisplay: inline-block\n\t\tpadding: 0 3px\n\t\t&.slick-active\n\t\t\tbutton\n\t\t\t\topacity: 0.3\n\t\t\t\tbox-shadow: none\n\t\t&:before\n\t\t\tdisplay: none\n\n\tbutton\n\t\tdisplay: block\n\t\twidth: 6px\n\t\theight: 6px\n\t\tbackground: #fff\n\t\tbox-shadow: 0 1px 5px rgba(0,0,0,.25)\n\t\tcursor: pointer\n\t\t+hide-text\n\t\tborder-radius: 50%\n\t\t&:hover\n\t\t\tbox-shadow: none\n","// px to em\r\n$browser-context: 16\r\n@function em($pixels, $context: $browser-context)\r\n\t@return #{$pixels/$context}em\r\n\r\n// clearfix\r\n=pie-clearfix\r\n\t&:before, &:after\r\n\t\tcontent: \"\"\r\n\t\tdisplay: table\r\n\t&:after\r\n\t\tclear: both\r\n\r\n// circle\r\n=circle-fix($circle-width, $circle-color)\r\n\tborder-radius: 50%\r\n\tborder: $circle-width+px solid $circle-color\r\n\tbox-shadow: 0 0 1px $circle-color\r\n\r\n=circle-in-fix($circle-width, $circle-color)\r\n\tborder-radius: 50%\r\n\tborder: $circle-width+px solid $circle-color\r\n\tbox-shadow: 0 0 1px $circle-color, inset 0 0 1px $circle-color\r\n\r\n// width\r\n=r($width)\r\n\t@media only screen and (max-width: $width+ \"px\")\r\n\t\t@content\r\n\r\n// font-face\r\n=font($alias, $name)\r\n\t@font-face\r\n\t\tfont-family: $alias\r\n\t\tsrc: url(\"../css/fonts/\" + $name + \".eot\")\r\n\t\tsrc: url(\"../css/fonts/\" + $name + \".eot?#iefix\") format(\"embedded-opentype\"), url(\"../css/fonts/\" + $name + \".woff\") format(\"woff\"), url(\"../css/fonts/\" + $name + \".woff2\") format(\"woff2\"), url(\"../css/fonts/\" + $name + \".ttf\") format(\"truetype\")\r\n\t\tfont-weight: normal\r\n\t\tfont-style: normal\r\n// cover\r\n=cover\r\n\tbackground-repeat: no-repeat\r\n\tbackground-size: cover\r\n\tbackground-position: 50% 50%\r\n\r\n// placeholder\r\n=placeholder-color($color)\r\n\t&:-moz-placeholder,\r\n\t&::-moz-placeholder\r\n\t\tcolor: $color\r\n\t\topacity: 1\r\n\t&::-webkit-input-placeholder\r\n\t\tcolor: $color\r\n\r\n// unselectable\r\n=unselectable\r\n\t-webkit-touch-callout: none\r\n\t-webkit-user-select: none\r\n\t-khtml-user-select: none\r\n\t-moz-user-select: none\r\n\t-ms-user-select: none\r\n\tuser-select: none\r\n\r\n=nosel\r\n\t+unselectable\r\n\r\n// selection\r\n=selection\r\n\t& ::selection\r\n\t\t@content\r\n\t& ::-moz-selection\r\n\t\t@content\r\n\r\n//triangle\r\n=arr($width, $height, $bg, $direction)\r\n\twidth: 0px\r\n\theight: 0px\r\n\tborder-style: solid\r\n\t@if $direction == t\r\n\t\tborder-width: 0 $width / 2 + px $height + px $width / 2 + px\r\n\t\tborder-color: transparent transparent $bg transparent\r\n\t@if $direction == r\r\n\t\tborder-width: $height / 2 + px 0 $height / 2 + px $width + px\r\n\t\tborder-color: transparent transparent transparent $bg\r\n\t@if $direction == b\r\n\t\tborder-width: $height + px $width / 2 + px 0 $width / 2 + px\r\n\t\tborder-color: $bg transparent transparent transparent\r\n\t@if $direction == l\r\n\t\tborder-width: $height / 2 + px $width + px $height / 2 + px 0\r\n\t\tborder-color: transparent $bg transparent transparent\r\n\t@if $direction == tl\r\n\t\tborder-width: $height + px $width + px 0 0\r\n\t\tborder-color: $bg transparent transparent transparent\r\n\t@if $direction == tr\r\n\t\tborder-width: 0 $width + px $height + px 0\r\n\t\tborder-color: transparent $bg transparent transparent\r\n\t@if $direction == br\r\n\t\tborder-width: 0 0 $height + px $width + px\r\n\t\tborder-color: transparent transparent $bg transparent\r\n\t@if $direction == bl\r\n\t\tborder-width: $width + px 0 0 $height + px\r\n\t\tborder-color: transparent transparent transparent $bg\r\n// example\r\n// +arr(500,50, #000, l)\r\n// +arr(500,50, #000, bl)\r\n\r\n=vcenter\r\n\tposition: absolute\r\n\ttop: 50%\r\n\tleft: 50%\r\n\ttransform: translate(-50%,-50%)\r\n\r\n=vertical\r\n\twhite-space: nowrap\r\n\t&:before\r\n\t\tcontent: \"\"\r\n\t\tdisplay: inline-block\r\n\t\tvertical-align: middle\r\n\t\twidth: 0\r\n\t\theight: 100%\r\n\t\tmargin-right: -0.25em\r\n\r\n=hide-text\r\n\tfont: 0/0 a\r\n\ttext-shadow: none\r\n\tcolor: transparent\r\n=hidetext\r\n\t+hide-text\r\n\r\n=text-overflow\r\n\toverflow: hidden\r\n\t-ms-text-overflow: ellipsis\r\n\ttext-overflow: ellipsis\r\n\twhite-space: nowrap\r\n\r\n=ratio($width, $height)\r\n\tposition: relative\r\n\t&:before\r\n\t\tdisplay: block\r\n\t\tcontent: \"\"\r\n\t\twidth: 100%\r\n\t\tpadding-top: ($height / $width) * 100%\r\n\t\t\r\n=ratio-in\r\n\tposition: absolute\r\n\ttop: 0\r\n\tleft: 0\r\n\tright: 0\r\n\tbottom: 0","// Debugging\n// =========\n\n// Susy Inspect\n// ------------\n// Output arguments passed to a inspect.\n// - $mixin  : <susy mixin>\n// - $inspec   : <mixin arguments>\n\n@mixin susy-inspect(\n  $mixin,\n  $inspect\n) {\n  $show: false;\n\n  @each $item in $inspect {\n    @if index($item, inspect) {\n      $show: true;\n    }\n  }\n\n  @if $show or susy-get(debug inspect) {\n    -susy-#{$mixin}: inspect($inspect);\n  }\n}\n","// rem Support\n// ===========\n\n// rem\n// ---\n// Check for an existing support mixin, or output directly.\n// - $prop  : <css property>\n// - $val   : <css value>\n@mixin susy-rem(\n  $prop,\n  $val\n) {\n  $_reqs: (\n    variable: rhythm-unit rem-with-px-fallback,\n    mixin: rem,\n  );\n  @if susy-support(rem, $_reqs, $warn: false) and $rhythm-unit == rem {\n    @include rem($prop, $val);\n  } @else {\n    #{$prop}: $val;\n  }\n}\n","// Container Syntax\n// ================\n\n// Container [mixin]\n// -----------------\n// Set a container element\n// - [$layout]  : <settings>\n@mixin container(\n  $layout: $susy\n) {\n  $inspect    : $layout;\n  $layout     : parse-grid($layout);\n\n  $_width     : get-container-width($layout);\n  $_justify   : parse-container-position(susy-get(container-position, $layout));\n  $_property  : if(susy-get(math, $layout) == static, width, max-width);\n\n  $_box       : susy-get(box-sizing, $layout);\n\n  @if $_box {\n    @include output((box-sizing: $_box));\n  }\n\n  @include susy-inspect(container, $inspect);\n  @include float-container($_width, $_justify, $_property);\n  @include show-grid($layout);\n}\n\n// Container [function]\n// --------------------\n// Return container width\n// - [$layout]  : <settings>\n@function container(\n  $layout: $susy\n) {\n  $layout: parse-grid($layout);\n  @return get-container-width($layout);\n}\n\n// Get Container Width\n// -------------------\n// Calculate the container width\n// - [$layout]: <settings>\n@function get-container-width(\n  $layout: $susy\n) {\n  $layout         : parse-grid($layout);\n  $_width         : susy-get(container, $layout);\n  $_column-width  : susy-get(column-width, $layout);\n  $_math          : susy-get(math, $layout);\n\n  @if not($_width) or $_width == auto {\n    @if valid-column-math($_math, $_column-width) {\n      $_columns   : susy-get(columns, $layout);\n      $_gutters   : susy-get(gutters, $layout);\n      $_spread    : if(is-split($layout), wide, narrow);\n      $_width     : susy-sum($_columns, $_gutters, $_spread) * $_column-width;\n    } @else {\n      $_width: 100%;\n    }\n  }\n\n  @return $_width;\n}\n\n// Parse Container Position\n// ------------------------\n// Parse the $container-position into margin values.\n// - [$justify]   : left | center | right | <length> [<length>]\n@function parse-container-position(\n  $justify: map-get($susy-defaults, container-position)\n) {\n  $_return: if($justify == left, 0, auto) if($justify == right, 0, auto);\n\n  @if not(index(left right center, $justify)) {\n    $_return: nth($justify, 1);\n    $_return: $_return if(length($justify) > 1, nth($justify, 2), $_return);\n  }\n\n  @return $_return;\n}\n","// Background Properties\n// =====================\n\n// Susy Background Image\n// ---------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-image>\n@mixin susy-background-image(\n  $image\n) {\n  @if susy-support(background-image, (mixin: background-image), $warn: false) {\n    @include background-image($image...);\n  } @else {\n    background-image: $image;\n  }\n}\n\n// Susy Background Size\n// ---------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-size>\n@mixin susy-background-size(\n  $size\n) {\n  @if susy-support(background-options, (mixin: background-size)) {\n    @include background-size($size);\n  } @else {\n    background-size: $size;\n  }\n}\n\n// Susy Background Origin\n// ----------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-origin>\n@mixin susy-background-origin(\n  $origin\n) {\n  @if susy-support(background-options, (mixin: background-origin)) {\n    @include background-origin($origin);\n  } @else {\n    background-origin: $origin;\n  }\n}\n\n// Susy Background Clip\n// --------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-clip>\n@mixin susy-background-clip(\n  $clip\n) {\n  @if susy-support(background-options, (mixin: background-clip)) {\n    @include background-clip($clip);\n  } @else {\n    background-clip: $clip;\n  }\n}\n","// Background Grid Syntax\n// ======================\n\n$susy-overlay-grid-head-exists: false;\n\n\n// Show Grid/s\n// -----------\n// Show grid on any element using either background or overlay.\n// - [$grid]  : <settings>\n@mixin show-grid(\n  $grid: $susy\n) {\n  $inspect: $grid;\n  $_output: debug-get(output, $grid);\n\n  @include susy-inspect(show-grid, $inspect);\n  @if $_output == overlay and susy-get(debug image, $grid) != hide {\n    @include overlay-grid($grid);\n  } @else {\n    @include background-grid($grid);\n  }\n}\n\n@mixin show-grids(\n  $grid: $susy\n) {\n  @include show-grid($grid);\n}\n\n// Background Grid\n// ---------------\n// Show a grid background on any element.\n// - [$grid]  : <settings>\n@mixin background-grid(\n  $grid: $susy\n) {\n  $inspect  : $grid;\n  $_output  : get-background($grid);\n\n  @if length($_output) > 0 {\n    $_flow: susy-get(flow, $grid);\n\n    $_image: ();\n    @each $name, $layer in map-get($_output, image) {\n      $_direction: if($name == baseline, to bottom, to to($_flow));\n      $_image: append($_image, linear-gradient($_direction, $layer), comma);\n    }\n    $_output: map-merge($_output, (image: $_image));\n\n    @include background-grid-output($_output...);\n    @include susy-inspect(background-grid, $inspect);\n  }\n}\n\n\n// Overlay Grid\n// ------------\n// Generate an icon to trigger grid-overlays on any given elements.\n// $grids...  : <selector> [<settings>] [, <selector>]*\n@mixin overlay-grid (\n  $grid: $susy\n) {\n  @if not($susy-overlay-grid-head-exists) {\n    @at-root head { @include overlay-head($grid); }\n    @at-root head:before { @include overlay-trigger; }\n    @at-root head:hover { @include overlay-trigger-hover; }\n    $susy-overlay-grid-head-exists: true !global;\n  }\n\n  head:hover ~ &,\n  head:hover ~ body & {\n    position: relative;\n    &:before {\n      @include grid-overlay-base;\n      @include background-grid($grid);\n    }\n  }\n}\n\n\n// [Private] Overlay Trigger\n// -------------------------\n@mixin overlay-trigger {\n  content: \"|||\";\n  display: block;\n  padding: 5px 10px;\n  font: {\n    family: sans-serif;\n    size: 16px;\n    weight: bold;\n  }\n}\n\n\n// [Private] Overlay Trigger Hover\n// -------------------------------\n@mixin overlay-trigger-hover {\n  background: rgba(white, .5);\n  color: red;\n}\n\n\n// [Private] Overlay Head\n// ----------------------\n// <head> styles to create grid overlay toggle\n@mixin overlay-head (\n  $grid: $susy\n) {\n  $_toggle: debug-get(toggle, $grid);\n  $_horz: null;\n  $_vert: null;\n\n  @each $side in $_toggle {\n    $_horz: if($side == left or $side == right, $side, $_horz);\n    $_vert: if($side == top or $side == bottom, $side, $_vert);\n  }\n\n  display: block;\n  position: fixed;\n  #{$_horz}: 10px;\n  #{$_vert}: 10px;\n  z-index: 999;\n  color: #333;\n  background: rgba(white, .25);\n}\n\n\n// [Private] Grid Overlay Base\n// ---------------------------\n// Base styles for generating a grid overlay\n@mixin grid-overlay-base() {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  content: \" \";\n  z-index: 998;\n}\n\n\n// Get Symmetrical Background\n// --------------------------\n// - $grid: <map>\n@function get-background-sym(\n  $grid\n) {\n  $grid           : parse-grid($grid);\n  $_gutters       : susy-get(gutters, $grid);\n  $_column-width  : susy-get(column-width, $grid);\n  $_math          : susy-get(math, $grid);\n\n  $_color         : debug-get(color);\n  $_trans         : transparent;\n  $_light         : lighten($_color, 15%);\n\n  $_end           : 1 + $_gutters;\n  $_after         : percentage(1/$_end);\n  $_stops         : ();\n  $_size          : span(1 $grid wide);\n\n  @if is-inside($grid) {\n    $_stops: $_color, $_light;\n  } @else if is-split($grid) {\n    $_split: $_gutters/2;\n    $_before: percentage($_split/$_end);\n    $_after: percentage((1 + $_split)/$_end);\n    $_stops: $_trans $_before, $_color $_before, $_light $_after, $_trans $_after;\n  } @else {\n    $_stops: $_color, $_light $_after, $_trans $_after;\n  }\n\n  @if $_math == static {\n    $_size: valid-column-math($_math, $_column-width) * $_end;\n  }\n\n  $_output: (\n    image: (columns: $_stops),\n    size: $_size,\n  );\n\n  @return $_output;\n}\n\n\n// Get Asymmetrical Inside\n// -----------------------\n// - $grid: <settings>\n@function get-asym-inside(\n  $grid\n) {\n  $grid     : parse-grid($grid);\n  $_columns : susy-get(columns, $grid);\n\n  $_color   : debug-get(color);\n  $_light   : lighten($_color, 15%);\n  $_stops   : ();\n\n  @for $location from 1 through susy-count($_columns) {\n    $this-stop: ();\n\n    @if $location == 1 {\n      $this-stop: append($this-stop, $_color, comma);\n    } @else {\n      $start: parse-span(1 at $location $grid);\n      $start: get-isolation($start);\n      $this-stop: append($this-stop, $_color $start, comma);\n    }\n\n    @if $location == susy-count($_columns) {\n      $this-stop: append($this-stop, $_light, comma);\n    } @else {\n      $_end: parse-span(1 at ($location + 1) $grid);\n      $_end: get-isolation($_end);\n      $this-stop: append($this-stop, $_light $_end, comma);\n    }\n\n    $_stops: join($_stops, $this-stop, comma);\n  }\n\n  @return $_stops;\n}\n\n\n// Get Asymmetrical Split\n// ----------------------\n// - $grid: <settings>\n@function get-asym-split(\n  $grid\n) {\n  $grid     : parse-grid($grid);\n  $_columns : susy-get(columns, $grid);\n\n  $_color   : debug-get(color);\n  $_light   : lighten($_color, 15%);\n  $_stops   : ();\n\n  @for $location from 1 through susy-count($_columns) {\n    $this-stop: ();\n\n    $start: parse-span(1 at $location $grid);\n    $start: get-isolation($start);\n    $this-stop: append($this-stop, transparent $start, comma);\n    $this-stop: append($this-stop, $_color $start, comma);\n\n    $_end: $start + span(1 at $location $grid);\n    $this-stop: append($this-stop, $_light $_end, comma);\n    $this-stop: append($this-stop, transparent $_end, comma);\n\n    $_stops: join($_stops, $this-stop, comma);\n  }\n\n  @return $_stops;\n}\n\n\n// Get Asymmetrical Outside\n// ------------------------\n// - $grid: <settings>\n@function get-asym-outside(\n  $grid\n) {\n  $grid     : parse-grid($grid);\n  $_columns : susy-get(columns, $grid);\n\n  $_color   : debug-get(color);\n  $_light   : lighten($_color, 15%);\n  $_trans   : transparent;\n  $_stops   : ();\n\n  @for $location from 1 through susy-count($_columns) {\n    $this-stop: ();\n\n    @if $location == 1 {\n      $this-stop: append($this-stop, $_color, comma);\n    } @else {\n      $start: parse-span(1 at $location $grid);\n      $start: get-isolation($start);\n      $this-stop: append($this-stop, $_color $start, comma);\n    }\n\n    @if $location == susy-count($_columns) {\n      $this-stop: append($this-stop, $_light, comma);\n    } @else {\n      $gutter: get-span-width(first $location $grid);\n\n      $_end: parse-span(1 at ($location + 1) $grid);\n      $_end: get-isolation($_end);\n\n      $gutter: $_light $gutter, $_trans $gutter, $_trans $_end;\n      $this-stop: join($this-stop, $gutter, comma);\n    }\n\n    $_stops: join($_stops, $this-stop, comma);\n  }\n\n  @return $_stops;\n}\n\n\n// Get Asymmetrical Background\n// ---------------------------\n// - $grid: <settings>\n@function get-background-asym(\n  $grid\n) {\n  $_stops: ();\n\n  @if is-inside($grid) {\n    $_stops: get-asym-inside($grid);\n  } @else if is-split($grid) {\n    $_stops: get-asym-split($grid);\n  } @else {\n    $_stops: get-asym-outside($grid);\n  }\n\n  @return (image: (columns: $_stops));\n}\n\n\n// Get Background\n// --------------\n// - $grid: <settings>\n@function get-background(\n  $grid\n) {\n  $grid     : parse-grid($grid);\n  $_show    : susy-get(debug image, $grid);\n  $_return  : ();\n\n  @if $_show and $_show != 'hide' {\n    $_columns: susy-get(columns, $grid);\n\n    @if $_show != 'show-baseline' {\n      $_sym: is-symmetrical($_columns);\n      $_return: if($_sym, get-background-sym($grid), get-background-asym($grid));\n      $_return: map-merge($_return, (clip: content-box));\n    }\n\n    @if $_show != 'show-columns'\n      and global-variable-exists(base-line-height)\n      and type-of($base-line-height) == 'number'\n      and not unitless($base-line-height) {\n      $_color: variable-exists('grid-background-baseline-color');\n      $_color: if($_color, $grid-background-baseline-color, #000);\n\n      $_image: map-get($_return, image);\n      $_size: map-get($_return, size);\n      $_baseline: (baseline: ($_color 1px, transparent 1px));\n      $_baseline-size: 100% $base-line-height;\n\n      $_return: map-merge($_return, (\n        image: if($_image, map-merge($_image, $_baseline), $_baseline),\n        size: if($_size, ($_size, $_baseline-size), $_baseline-size),\n      ));\n\n      @if $_show == 'show' {\n        $_clip: map-get($_return, clip);\n        $_return: map-merge($_return, (clip: join($_clip, border-box, comma)));\n      }\n    } @else if $_show == 'show-baseline' {\n      @warn 'Please provide a $base-line-height with the desired height and units';\n    }\n  }\n\n  @if map-get($_return, image) {\n    $_return: map-merge($_return, (flow: susy-get(flow, $grid)));\n  }\n\n  @return $_return;\n}\n\n\n// Get Debug\n// ---------\n// Return the value of a debug setting\n// - $key: <setting>\n@function debug-get(\n  $key,\n  $grid: $susy\n) {\n  $key: join(debug, $key, space);\n  @return susy-get($key, $grid);\n}\n","// Grid Background API\n// ===================\n// - Sub-pixel rounding can lead to several pixels variation between browsers.\n\n// Grid Background Output\n// ----------------------\n// - $image: background-image\n// - $size: background-size\n// - $clip: background-clip\n// - [$flow]: ltr | rtl\n@mixin background-grid-output (\n  $image,\n  $size: null,\n  $clip: null,\n  $flow: map-get($susy-defaults, flow)\n) {\n  $output: (\n    background-image: $image,\n    background-size: $size,\n    background-origin: $clip,\n    background-clip: $clip,\n    background-position: from($flow) top,\n  );\n\n  @include output($output);\n}\n","// Susy Fallback Clearfix\n// ======================\n\n\n// Clearfix\n// --------\n// Check for an existing support mixin, or provide a simple fallback.\n@mixin susy-clearfix {\n  @if susy-support(clearfix, (mixin: clearfix)) {\n    @include clearfix;\n  } @else {\n    &:after {\n      content: \" \";\n      display: block;\n      clear: both;\n    }\n  }\n}\n","// Margin Syntax\n// =============\n\n// Pre\n// ---\n// Add spanning-margins before an element.\n// - $span  : <span>\n@mixin pre(\n  $span\n) {\n  $inspect: $span;\n  $span   : map-merge((spread: wide), parse-span($span));\n  $flow   : susy-get(flow, $span);\n  $split  : if(susy-get(gutter-position, $span) == split, true, false);\n  $gutter : gutter($span);\n  $span   : span($span);\n  $width  : if($split and $gutter, $span + $gutter, $span);\n\n  @include susy-inspect(pre, $inspect);\n  @include margin-output($width, null, $flow);\n}\n\n// Post\n// ----\n// Add spanning-margins after an element.\n// - $span  : <span>\n@mixin post(\n  $span\n) {\n  $inspect  : $span;\n  $span     : map-merge((spread: wide), parse-span($span));\n  $flow     : susy-get(flow, $span);\n  $split    : if(susy-get(gutter-position, $span) == split, true, false);\n  $width    : if($split, span($span) + gutter($span), span($span));\n\n  @include susy-inspect(post, $inspect);\n  @include margin-output(null, $width, $flow);\n}\n\n// Push\n// ----\n// Simple synonymn for pre.\n// - $span  : <span>\n@mixin push(\n  $span\n) {\n  @include pre($span);\n}\n\n// Pull\n// ----\n// Add negative spanning-margins before an element.\n// - $span  : <span>\n@mixin pull(\n  $span\n) {\n  $inspect  : $span;\n  $span     : map-merge((spread: wide), parse-span($span));\n  $flow     : susy-get(flow, $span);\n  $split    : if(susy-get(gutter-position, $span) == split, true, false);\n  $width    : if($split, 0 - span($span) + gutter($span), 0 - span($span));\n\n  @include susy-inspect(pull, $inspect);\n  @include margin-output($width, null, $flow);\n}\n\n// Squish\n// ------\n// Add spanning-margins before and after an element.\n// - $pre     : <span>\n// - [$post]  : <span>\n@mixin squish(\n  $pre,\n  $post: false\n) {\n  $inspect      : ($pre, $post);\n  $pre          : map-merge((spread: wide), parse-span($pre));\n\n  @if $post {\n    $post: map-merge((spread: wide), parse-span($post));\n  } @else {\n    $span: susy-get(span, $pre);\n    @if length($span) > 1 {\n      $pre: map-merge($pre, (span: nth($span, 1)));\n      $post: map-merge($pre, (span: nth($span, 2)));\n    } @else {\n      $post: $pre;\n    }\n  }\n\n  @include susy-inspect(squish, $inspect);\n  @include pre($pre);\n  @include post($post);\n}\n","// Gutter Syntax\n// =============\n\n\n// Gutters\n// -------\n// Set gutters on an element.\n// - [$span]   : <settings>\n@mixin gutters(\n  $span: $susy\n) {\n  $inspect  : $span;\n  $span     : parse-gutters($span);\n  $_gutters : get-gutters($span);\n\n  $_output: (\n    before: map-get($_gutters, before),\n    after: map-get($_gutters, after),\n    flow: susy-get(flow, $span),\n  );\n\n  @include susy-inspect(gutters, $inspect);\n\n  @if is-inside($span) {\n    @include padding-output($_output...);\n  } @else {\n    @include margin-output($_output...);\n  }\n}\n\n@mixin gutter(\n  $span: $susy\n) {\n  @include gutters($span);\n}\n\n\n// Gutter\n// ------\n// Return the width of a gutter.\n// - [$span]   : <settings>\n@function gutter(\n  $span: $susy\n) {\n  $span: parse-gutters($span);\n\n  $_gutters: get-gutters($span);\n  $_gutters: map-get($_gutters, before) or map-get($_gutters, after);\n\n  @return $_gutters;\n}\n\n@function gutters(\n  $span: $susy\n) {\n  @return gutter($span);\n}\n\n\n// Get Gutter Width\n// ----------------\n// Return gutter width.\n// - [$context]: <context>\n@function get-gutter-width(\n  $context: $susy\n) {\n  $context  : parse-gutters($context);\n\n  $_gutters : susy-get(gutters, $context);\n  $_gutter  : susy-get(gutter-override, $context);\n\n  @if $_gutters and ($_gutters > 0) and not($_gutter) {\n    $_column-width: susy-get(column-width, $context);\n    $_math: gutter-math($context);\n    @if $_math == static {\n      $_gutter: $_gutters * valid-column-math($_math, $_column-width);\n    } @else {\n      $_columns : susy-get(columns, $context);\n      $_spread  : if(is-split($context), wide, susy-get(spread, $context));\n      $_gutter  : percentage($_gutters / susy-sum($_columns, $_gutters, $_spread));\n    }\n  }\n\n  $_gutter: if($_gutter == 'no-gutters' or $_gutter == 'no-gutter', null, $_gutter);\n\n  @return $_gutter;\n}\n\n\n// Get Gutters\n// -----------\n// Return before and after gutter values.\n// - [$context]: <context>\n@function get-gutters(\n  $context: $susy\n) {\n  $context            : parse-gutters($context);\n\n  $_gutter-position   : susy-get(gutter-position, $context);\n  $_gutter            : get-gutter-width($context);\n\n  $_return            : (before: null, after: null);\n\n  @if is-split($context) and $_gutter {\n    $_gutter: $_gutter / 2;\n    $_return: map-merge($_return, (before: $_gutter, after: $_gutter));\n  } @else {\n    $_return: map-merge($_return, ($_gutter-position: $_gutter));\n  }\n\n  @return $_return;\n}\n\n\n// Is Inside\n// ---------\n// Returns true if gutters are inside.\n// $context: <context>\n@function is-inside(\n  $context\n) {\n  $_inside: inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_inside, $_gutter-position), true, false);\n}\n\n\n// Is Split\n// --------\n// Returns true if gutters are split.\n// $context: <context>\n@function is-split(\n  $context\n) {\n  $_split: split inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_split, $_gutter-position), true, false);\n}\n\n\n// Gutter Math\n// -----------\n// Return the math to use for gutter calculations\n// $context: <context>\n@function gutter-math(\n  $context: $susy\n) {\n  $_return  : susy-get(math, $context);\n  $_return  : if(susy-get(gutter-position, $context) == inside-static, static, $_return);\n\n  @return $_return;\n}\n","// Span Syntax\n// ===========\n\n// Span [mixin]\n// ------------\n// Set a spanning element using shorthand syntax.\n// - $span  : <span>\n@mixin span(\n  $span\n) {\n  $inspect: $span;\n  $span: parse-span($span);\n  $output: span-math($span);\n  $nesting: susy-get(span, $span);\n  $clear: susy-get(clear, $span);\n\n  $box: susy-get(box-sizing, $span);\n  $content-box: if(susy-get(global-box-sizing) != 'border-box', true, false);\n  $box: $box or if(is-inside($span) and $content-box, border-box, null);\n\n  @if $clear == break {\n    @include break;\n  } @else if $clear == nobreak {\n    @include nobreak;\n  }\n\n  @include susy-inspect(span, $inspect);\n  @include output((box-sizing: $box));\n  @include float-span-output($output...);\n\n  @if valid-columns($nesting, silent) {\n    @include nested($span) { @content; }\n  } @else {\n    @content;\n  }\n}\n\n// Span [function]\n// ---------------\n// Return the width of a span.\n// - $span  : <span>\n@function span(\n  $span\n) {\n  @return get-span-width($span);\n}\n\n// Span Math\n// ---------\n// Get all the span results.\n// - $span: <map>\n@function span-math(\n  $span\n) {\n  $nest             : if(susy-get(role, $span) == nest, true, false);\n  $split-nest       : if(is-split($span) and $nest, true, false);\n  $edge             : get-edge($span);\n  $location         : get-location($span);\n\n  $float            : from;\n  $padding-before   : null;\n  $padding-after    : null;\n  $margin-before    : null;\n  $margin-after     : null;\n\n  // calculate widths\n  $spread: index(map-values($span), spread);\n  $span: if($split-nest and not($spread), map-merge($span, (spread: wide)), $span);\n  $width: get-span-width($span);\n  $gutters: get-gutters($span);\n\n  // apply gutters\n  @if is-inside($span) {\n    @if not(susy-get(role, $span)) {\n      $padding-before: map-get($gutters, before);\n      $padding-after: map-get($gutters, after);\n    }\n  } @else {\n    @if not($split-nest) {\n      $margin-before: map-get($gutters, before);\n      $margin-after: map-get($gutters, after);\n    }\n  }\n\n  // special margin handling\n  @if susy-get(output, $span) == isolate and $location {\n    $margin-before: get-isolation($span);\n    $margin-after: -100%;\n  } @else if $edge {\n    $is-split: is-split($span);\n    $pos: susy-get(gutter-position, $span);\n\n    @if $edge == last {\n      $float: susy-get(last-flow, $span);\n    }\n\n    @if not($is-split) {\n      @if $edge == full or ($edge == first and $pos == before) {\n        $margin-before: 0;\n      }\n      @if $edge == full or ($edge == last and $pos == after) {\n        $margin-after: 0;\n      }\n    }\n\n  }\n\n  @return (\n    width           : $width,\n    float           : $float,\n    margin-before   : $margin-before,\n    margin-after    : $margin-after,\n    padding-before  : $padding-before,\n    padding-after   : $padding-after,\n    flow            : susy-get(flow, $span),\n  );\n}\n\n// Get Span Width\n// --------------\n// Return span width.\n// - $span: <map>\n@function get-span-width(\n  $span\n) {\n  $span     : parse-span($span);\n\n  $n        : susy-get(span, $span);\n  $location : get-location($span);\n  $columns  : susy-get(columns, $span);\n  $gutters  : susy-get(gutters, $span);\n  $spread   : susy-get(spread, $span);\n\n  $context  : null;\n  $span-sum : null;\n  $width    : null;\n\n  @if $n == 'full' {\n    $pos: susy-get(gutter-position, $span);\n    $role: susy-get(role, $span);\n    $n: if($pos == split and $role != nest, susy-count($columns), 100%);\n  }\n\n  @if type-of($n) != number {\n    @warn \"(#{type-of($n)}) #{$n} is not a valid span.\";\n  } @else if unitless($n) {\n    $context: susy-sum($columns, $gutters, if(is-split($span), wide, narrow));\n    $spread: if(is-inside($span), $spread or wide, $spread);\n    $span-sum: susy($n, $location, $columns, $gutters, $spread);\n\n    $_math: susy-get(math, $span);\n    $_column-width: susy-get(column-width, $span);\n    @if $_math == static {\n      $width: $span-sum * valid-column-math($_math, $_column-width);\n    } @else {\n      $width: percentage($span-sum / $context);\n    }\n  } @else {\n    $width: $n;\n  }\n\n  @return $width;\n}\n","// Float Span API\n// ==============\n\n// Float Span Output\n// -----------------\n// - $width             : <length>\n// - [$float]           : from | to\n// - [$margin-before]   : <length>\n// - [$margin-after]    : <length>\n// - [$padding-before]  : <length>\n// - [$padding-after]   : <length>\n// - [$flow]            : ltr | rtl\n@mixin float-span-output(\n  $width,\n  $float            : from,\n  $margin-before    : null,\n  $margin-after     : null,\n  $padding-before   : null,\n  $padding-after    : null,\n  $flow             : map-get($susy-defaults, flow)\n) {\n  $to     : to($flow);\n  $from   : from($flow);\n\n  $output: (\n    width: $width,\n    float: if($float == to, $to, null) or if($float == from, $from, null),\n    margin-#{$from}: $margin-before,\n    margin-#{$to}: $margin-after,\n    padding-#{$from}: $padding-before,\n    padding-#{$to}: $padding-after,\n  );\n\n  @include output($output);\n}\n","// Gallery Syntax\n// ==============\n\n// Gallery\n// -------\n// Create an isolated gallery\n// - $span        : <span>\n// - [$selector]  : child | of-type\n@mixin gallery(\n  $span,\n  $selector: child\n) {\n  $inspect    : $span;\n  $span       : parse-span($span);\n  $span       : map-merge($span, (location: 1));\n\n  $n            : susy-get(span, $span);\n  $columns      : susy-get(columns, $span);\n  $context      : susy-count($columns);\n  $flow         : susy-get(flow, $span);\n\n  $inside       : is-inside($span);\n  $from         : from($flow);\n  $line         : floor($context / $n);\n  $symmetrical  : is-symmetrical($columns);\n\n  $output: (\n    width             : null,\n    float             : from,\n    margin-before     : null,\n    margin-after      : null,\n    padding-before    : null,\n    padding-after     : null,\n    flow              : $flow,\n  );\n\n  @if $inside {\n    $gutters: get-gutters($span);\n    $output: map-merge($output, (\n      padding-before: map-get($gutters, before),\n      padding-after: map-get($gutters, after),\n    ));\n  }\n\n  @if $symmetrical {\n    $output: map-merge($output, (width: get-span-width($span)));\n  }\n\n  $box          : susy-get(box-sizing, $span);\n  $global-box   : if(susy-get(global-box-sizing) == 'border-box', true, false);\n\n  @include susy-inspect(gallery, $inspect);\n\n  // Collective Output\n  @if $box == border-box or ($inside and not($box) and not($global-box)) {\n    @include output((box-sizing: border-box));\n  } @else if $box == content-box {\n    @include output((box-sizing: content-box));\n  }\n\n  @include float-span-output($output...);\n\n  // Individual Loop\n  @for $item from 1 through $line {\n    $nth: '#{$line}n + #{$item}';\n    &:nth-#{$selector}(#{$nth}) {\n      // Individual Prep\n      $output: (\n        width             : if($symmetrical, null, get-span-width($span)),\n        float             : null,\n        margin-before     : get-isolation($span),\n        margin-after      : -100%,\n        padding-before    : null,\n        padding-after     : null,\n        flow              : $flow,\n      );\n\n      // Individual Output\n      @include float-span-output($output...);\n\n      @if get-edge($span) == first {\n        @include break;\n        @include first($span);\n      } @else {\n        @include nobreak;\n      }\n\n      // Individual Location Increment\n      $location: get-location($span) + $n;\n      $location: if($location > $context, 1, $location);\n      $span: map-merge($span, (location: $location));\n    }\n  }\n}\n","// Isolation Syntax\n// ================\n\n\n// Isolate [Mixin]\n// ---------------\n// Set isolation as an override.\n// - $location: <span>\n@mixin isolate(\n  $isolate: 1\n) {\n  $inspect: $isolate;\n\n  $output: (\n    push: isolate($isolate),\n    flow: susy-get(flow, $isolate),\n  );\n\n  @include susy-inspect(isolate, $inspect);\n  @include isolate-output($output...);\n}\n\n\n// Isolate [function]\n// ------------------\n// Return an isolation offset width.\n// - $location: <span>\n@function isolate(\n  $isolate: 1\n) {\n  $isolate: parse-span($isolate);\n  $isolation: susy-get(span, $isolate);\n\n  @if $isolation and not(get-location($isolate)) {\n    $new: (\n      span: null,\n      location: $isolation,\n    );\n    $isolate: map-merge($isolate, $new);\n  }\n\n  @return get-isolation($isolate);\n}\n\n\n// Get Isolation\n// -------------\n// Return the isolation offset width\n// - $input: <map>\n@function get-isolation(\n  $input\n) {\n  $location   : get-location($input);\n  $columns    : susy-get(columns, $input);\n  $width      : null;\n\n  @if type-of($location) == number and not(unitless($location)) {\n    $width: $location;\n  } @else if $location {\n    $push: $location - 1;\n    @if $push > 0 {\n      $push: map-merge($input, (\n        span: $push,\n        location: 1,\n        spread: wide,\n      ));\n      $width: get-span-width($push);\n    }\n  }\n\n  @if susy-get(gutter-position, $input) == split\n      and susy-get(gutters, $input) > 0 {\n    $width: if($width == null, gutters($input), $width + gutters($input));\n  }\n\n  @return $width or 0;\n}\n","// Row Start & End\n// ===============\n\n// Break\n// -----\n// Apply to any element that should force a line break.\n@mixin break {\n  @include output((clear: both));\n}\n\n\n// NoBreak\n// -------\n// Cancel the break() effect, e.g. when using media queries.\n@mixin nobreak {\n  @include output((clear: none));\n}\n\n\n// Full\n// ----\n// - [$context]: <layout shorthand>\n@mixin full(\n  $context: $susy\n) {\n  $inspect : $context;\n  @include susy-inspect(full, $inspect);\n  @include span(full of parse-grid($context) break);\n}\n\n\n// First\n// -----\n// - [$context]: <settings>\n@mixin first(\n  $context: $susy\n) {\n  $inspect  : $context;\n  $context  : parse-grid($context);\n  $flow     : susy-get(flow, $context);\n\n  @include susy-inspect(first, $inspect);\n  @if not(is-split($context)) {\n    @include float-first($flow);\n  }\n}\n\n@mixin alpha(\n  $context: $susy\n) {\n  @include first($context);\n}\n\n\n// Last\n// ----\n// - [$context]: <settings>\n@mixin last(\n  $context: $susy\n) {\n  $inspect  : $context;\n  $context  : parse-grid($context);\n\n  @include susy-inspect(last, $inspect);\n\n  $output: (\n    flow: susy-get(flow, $context),\n    last-flow: susy-get(last-flow, $context),\n    margin: if(is-split($context), null, 0),\n  );\n\n  @include float-last($output...);\n}\n\n@mixin omega(\n  $context: $susy\n) {\n  @include last($context);\n}\n\n\n// Get Edge\n// --------\n// Calculate edge value based on location, if possible\n@function get-edge(\n  $span\n) {\n  $span       : parse-span($span);\n  $edge       : susy-get(edge, $span);\n\n  @if not($edge) {\n    $count: susy-count(susy-get(columns, $span));\n    $location: susy-get(location, $span);\n    $n: susy-get(span, $span);\n\n    $number: if(type-of($location) == number, true, false);\n    $index: if($number and unitless($location), true, false);\n\n    @if $n == $count {\n      $edge: full;\n    } @else if $location and $n and $index {\n      @if $location == 1 {\n        $edge: if($n == $count, full, first);\n      } @else if $location + $n - 1 == $count {\n        $edge: last;\n      }\n    }\n  }\n\n  @if $edge == alpha or $edge == omega {\n    $edge: if($edge == alpha, first, last);\n  }\n\n  @return $edge;\n}\n\n\n// Get Location\n// ------------\n// Calculate location value based on edge, if possible\n@function get-location(\n  $span\n) {\n  $span       : parse-span($span);\n  $location   : susy-get(location, $span);\n  $edge       : get-edge($span);\n  $n          : susy-get(span, $span);\n\n  @if $edge and not($location) and type-of($n) == number and unitless($n) {\n    @if $edge == first {\n      $location: 1;\n    } @else if $edge == last {\n      $location: susy-count(susy-get(columns, $span)) - $n + 1;\n    }\n  }\n\n  @return $location\n}\n"],"sourceRoot":"/source/"}